@page
@model CourseEnquiry.Pages.RoleMaster_ListInlineModel
@using System.Text.RegularExpressions;
@{
    ViewData["Title"] = "List of Role Master";
}

@section AdditionalCss {
    <link rel="stylesheet" href="~/css/ui.jqgrid.min.css" />
}

@section AdditionalJavaScript {
    <script src="~/js/jqgrid-i18n/grid.locale-en.min.js" asp-append-version="true"></script>
    <script src="~/js/jquery-jqgrid-4.13.2.min.js" asp-append-version="true"></script>
    <script src="~/js/jqgrid-listinline.js" asp-append-version="true"></script>

    <script type="text/javascript">
        var urlAndMethod = '/RoleMaster/RoleMaster_ListInline';
        var errorMessage = '';

        function getSerializedData(currentId) {
            var rowData = $('#list-grid').jqGrid('getRowData', currentId);
            var roleId = rowData.RoleId;

            if (roleId == '')
                roleId = '-1';

            var serializedData =
                "'RoleId':'" + roleId + "'," +
                "'RoleDescription':'" + $('#' + currentId + '_RoleDescription').val().replace(/~APOS/g, "'").replace(/~QUOT/g, '"').replace(/~NEWL/g, '\n').replace(/'/g, "\\'") + "'," +
                "'CreatedOn':'" + $('#' + currentId + '_CreatedOn').val() + "'," +
                "'CreatedBy':'" + $('#' + currentId + '_CreatedBy').val().replace(/~APOS/g, "'").replace(/~QUOT/g, '"').replace(/~NEWL/g, '\n').replace(/'/g, "\\'") + "'," +
                "'ModifiedOn':'" + $('#' + currentId + '_ModifiedOn').val() + "'," +
                "'ModifiedBy':'" + $('#' + currentId + '_ModifiedBy').val().replace(/~APOS/g, "'").replace(/~QUOT/g, '"').replace(/~NEWL/g, '\n').replace(/'/g, "\\'") + "'";

            return serializedData;
        }

        function isDataValid(currentId) {
            var rowData = $('#list-grid').jqGrid('getRowData', currentId);
        
            var roleDescription = $('#' + currentId + '_RoleDescription').val();
            var createdOn = $('#' + currentId + '_CreatedOn').val();
            var createdBy = $('#' + currentId + '_CreatedBy').val();
            var modifiedOn = $('#' + currentId + '_ModifiedOn').val();
            var modifiedBy = $('#' + currentId + '_ModifiedBy').val();

            // validation
            if (roleDescription.length > 25) errorMessage += '- Role Description must be 25 characters or less.<br/>';
            if (createdOn == '') errorMessage += '- Created On is required.<br/>';
            if (createdOn != '' && !isDate(createdOn)) errorMessage += '- Created On must be a valid date.<br/>';
            if (createdBy == '') errorMessage += '- Created By is required.<br/>';
            if (createdBy.length > 50) errorMessage += '- Created By must be 50 characters or less.<br/>';
            if (modifiedOn != '' && !isDate(modifiedOn)) errorMessage += '- Modified On must be a valid date.<br/>';
            if (modifiedBy.length > 50) errorMessage += '- Modified By must be 50 characters or less.<br/>';

            if (errorMessage == '')
                return true;
            else
                return false;
        }

 
        function editFormatter(cellvalue, options, rowObject) {
            return cellvalue;
        }
 
        function deleteFormatter(cellvalue, options, rowObject) {
            return cellvalue;
        }
 
        $(function () {

            $('#list-grid').jqGrid({
                url: '/RoleMaster/RoleMaster_ListInline?handler=GridData',
                datatype: 'json',
                mtype: 'GET',
                colNames: ['Role Id','Role Description','Created On','Created By','Modified On','Modified By', '', ''],
                colModel: [
                    { name: 'RoleId', index: 'RoleId', align: 'right' },
                    { name: 'RoleDescription', index: 'RoleDescription', align: 'left', editable: true },
                    { name: 'CreatedOn', index: 'CreatedOn', align: 'left', editable: true, sorttype: "date", editoptions: { size: 20,  dataInit: function (el) { $(el).datepicker({ dateFormat: 'm/d/yy' }); }} },
                    { name: 'CreatedBy', index: 'CreatedBy', align: 'left', editable: true },
                    { name: 'ModifiedOn', index: 'ModifiedOn', align: 'left', editable: true, sorttype: "date", editoptions: { size: 20,  dataInit: function (el) { $(el).datepicker({ dateFormat: 'm/d/yy' }); }} },
                    { name: 'ModifiedBy', index: 'ModifiedBy', align: 'left', editable: true },
                    { name: 'editoperation', index: 'editoperation', align: 'center', width: 40, sortable: false, formatter: editFormatter },
                    { name: 'deleteoperation', index: 'deleteoperation', align: 'center', width: 40, sortable: false, formatter: deleteFormatter },
                ],
                pager: $('#list-pager'),
                rowNum: 10,
                pageable: true,
                autoencode: true,
                jsonReader:
                {
                    page: "d.page"
                },
                rowList: [5, 10, 20, 50],
                sortname: 'RoleId',
                sortorder: "asc",
                viewrecords: true,
                caption: 'List of Role Master',
                height: '100%',
                width: '1200',
                gridComplete: function () {
                    var ids = jQuery("#list-grid").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var currentid = ids[i];
                        editLink = "<a id='editLink" + currentid + "' href='#' onclick=\"editRow('" + currentid + "', 'ListInlineUpdate');\"><img src='/images/Edit.gif' style='border:none;' /></a>" +
                                "<a id='saveLink" + currentid + "' style='display:none;' href='#' onclick=\"saveRow('" + currentid + "');\"><img src='/images/Checked.gif' style='border:none;' /></a>";

                        deleteLink = "<a href='#' id='deleteLink" + currentid + "' onclick=\"deleteItem('" + currentid + "')\"><img src='/images/Delete.png' style='border:none;' /></a>" +
                            "<a id='cancelLink" + currentid + "' style='display:none;' href='#' onclick=\"cancelRow('" + currentid + "');\"><img src='/images/Unchecked.gif' style='border:none;' /></a>";

                        jQuery("#list-grid").jqGrid('setRowData', ids[i], { editoperation: editLink });
                        jQuery("#list-grid").jqGrid('setRowData', ids[i], { deleteoperation: deleteLink });
                        jQuery("#list-grid").jqGrid('setRowData', ids[i], { auditoperation: auditLink });
                    }
                }
            });
        });

        // rename the page parameter to _page because asp.net core razor's page model
        // does not recognize the page parameter when passed
        $.extend(jQuery.jgrid.defaults, {
            prmNames: {
                page: "_page"
            }
        });
    </script> 
}

<h2>@ViewData["Title"]</h2>
<br /><br />
<div id="errorConfirmationDialog"></div>
<div id="errorDialog"></div>

<a href="#" id="addLink1" onclick="addRow('ListInlineAdd')"><img src="@Url.Content("~/images/Add.gif")" alt="Add New RoleMaster" style="border: none;" /></a>&nbsp;<a href="#" id="addLink2" onclick="addRow('ListInlineAdd')">Add New RoleMaster</a>
<br /><br />

<table id="list-grid"></table>
<div id="list-pager"></div>
